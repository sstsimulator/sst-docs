"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[49040],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(96540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}},75949:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"core/link/getDefaultTimeBase","title":"getDefaultTimeBase","description":"Shared TimeConverters returned by SST-Core APIs will be removed in SST 16.0. All functions accepting TimeConverter now accept TimeConverter instead. Elements using a TimeConverter returned by SST-Core should create a local non-shared instance as shown:","source":"@site/../docs/core/link/getDefaultTimeBase.md","sourceDirName":"core/link","slug":"/core/link/getDefaultTimeBase","permalink":"/sst-docs/docs/core/link/getDefaultTimeBase","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/link/getDefaultTimeBase.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"getDefaultTimeBase"},"sidebar":"core","previous":{"title":"addRecvLatency","permalink":"/sst-docs/docs/core/link/addRecvLatency"},"next":{"title":"setDefaultTimeBase","permalink":"/sst-docs/docs/core/link/setDefaultTimeBase"}}');var s=n(74848),i=n(28453);const a={title:"getDefaultTimeBase"},o=void 0,l={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const t={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"// Deprecated in SST 15.0, will be removed in SST 16.0\nTimeConverter* getDefaultTimeBase();\nconst TimeConverter* getDefaultTimeBase() const;\n// Will replace deprecated function in SST 16.0\nTimeConverter getDefaultTimeBase();\nconst TimeConverter getDefaultTimeBase() const;\n"})}),"\n",(0,s.jsxs)(t.admonition,{title:"Deprecation",type:"warning",children:[(0,s.jsx)(t.p,{children:"Shared TimeConverters returned by SST-Core APIs will be removed in SST 16.0. All functions accepting TimeConverter* now accept TimeConverter instead. Elements using a TimeConverter* returned by SST-Core should create a local non-shared instance as shown:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"// Old code\nTimeConverter* tc = function_that_returns_tc();\n// New code\nTimeConverter tc = function_that_returns_tc();\n"})})]}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"returns"})," A TimeConverter* representing the default time base"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"// Configure a link connected to a port named 'port' \nSST::Link* link = configureLink(\"port\", new Event::Handler2<example,&example::handleEvent>(this));\n\n//highlight-next-line\nTimeConverter tc = link->getDefaultTimeBase();\nOutput* out = getSimulationOutput();\nout->output(\"The link connected to 'port' has a default time base of %s\\n\", tc.getPeriod().toStringBestSI().c_str());\n"})}),"\n",(0,s.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/link.h>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);