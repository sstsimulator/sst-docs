"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[91869],{28453:(t,e,i)=>{i.d(e,{R:()=>r,x:()=>c});var s=i(96540);const n={},a=s.createContext(n);function r(t){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:r(t.components),s.createElement(a.Provider,{value:e},t.children)}},56692:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"core/statoutput/class","title":"SST::Statistic(Fields)Output","description":"StatisticOutput objects generate output for all Statistics that are registered to them. There are several built-in StatisticOutput objects in SST and custom ones can also be registered from an element library to provide additional options. The SST configuration file determines which output(s) are used and specifies their parameters, such as output frequency.","source":"@site/../docs/core/statoutput/class.md","sourceDirName":"core/statoutput","slug":"/core/statoutput/class","permalink":"/sst-docs/docs/core/statoutput/class","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/statoutput/class.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"SST::Statistic(Fields)Output"},"sidebar":"core","previous":{"title":"addDataNTimes","permalink":"/sst-docs/docs/core/statistics/addDataNTimes"},"next":{"title":"constructor","permalink":"/sst-docs/docs/core/statoutput/constructor"}}');var n=i(74848),a=i(28453);const r={title:"SST::Statistic(Fields)Output"},c=void 0,l={},o=[{value:"StatisticOutput and StatisticFieldsOutput",id:"statisticoutput-and-statisticfieldsoutput",level:2},{value:"Creating a new StatisticFieldsOutput element",id:"creating-a-new-statisticfieldsoutput-element",level:2},{value:"Construction",id:"construction",level:4},{value:"Output generation",id:"output-generation",level:4},{value:"End of simulation",id:"end-of-simulation",level:4},{value:"Implementation",id:"implementation",level:3},{value:"Parallel considerations",id:"parallel-considerations",level:3},{value:"Header",id:"header",level:2}];function d(t){const e={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:["StatisticOutput objects generate output for all ",(0,n.jsx)(e.a,{href:"../statistics/class",children:"Statistics"})," that are registered to them. There are several built-in StatisticOutput objects in SST and custom ones can also be registered from an element library to provide additional options. The ",(0,n.jsx)(e.a,{href:"../../config/stats/overview",children:"SST configuration file"})," determines which output(s) are used and specifies their parameters, such as output frequency."]}),"\n",(0,n.jsx)(e.h2,{id:"statisticoutput-and-statisticfieldsoutput",children:"StatisticOutput and StatisticFieldsOutput"}),"\n",(0,n.jsxs)(e.p,{children:["Statistics (the data object itself, not the output), are typically implemented as a derivative of the ",(0,n.jsx)(e.code,{children:"Statistic<T>"})," class. This class implements statistics that track data fields of type ",(0,n.jsx)(e.code,{children:"T"})," (e.g., histogram of ",(0,n.jsx)(e.code,{children:"int"}),"s, accumulator of ",(0,n.jsx)(e.code,{children:"double"}),"s, etc.). However, custom statistics ",(0,n.jsx)(e.em,{children:"can"})," be created from a base class of ",(0,n.jsx)(e.code,{children:"Statistic<T>"})," called ",(0,n.jsx)(e.code,{children:"StatisticBase"}),". In the same way, the ",(0,n.jsx)(e.code,{children:"StatisticOutput"})," class is designed to handle arbitrary statistics derived from ",(0,n.jsx)(e.code,{children:"StatisticBase"})," while the ",(0,n.jsx)(e.code,{children:"StatisticFieldsOutput"})," is a derivative class designed for statistics of type ",(0,n.jsx)(e.code,{children:"Statistic<T>"}),". All built in statistics in SST derive from ",(0,n.jsx)(e.code,{children:"Statistic<T>"})," and all built-in statistic output objects derive from ",(0,n.jsx)(e.code,{children:"StatisticFieldsOutput"}),". This section documents the ",(0,n.jsx)(e.code,{children:"StatisticFieldsOutput"})," API, ",(0,n.jsx)(e.em,{children:"not"})," the underlying ",(0,n.jsx)(e.code,{children:"StatisticOutput"})," API."]}),"\n",(0,n.jsx)(e.h2,{id:"creating-a-new-statisticfieldsoutput-element",children:"Creating a new StatisticFieldsOutput element"}),"\n",(0,n.jsx)(e.p,{children:"SST's StatisticEngine constructs statistic outputs, registers statistics with outputs, and triggers output according to parameters given in the SST input file. From the perspective of a StatisticFieldsOutput object, the following will happen throughout simulation."}),"\n",(0,n.jsx)(e.h4,{id:"construction",children:"Construction"}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsx)(e.li,{children:"When SST begins, the output objects are constructed (one per rank)."}),"\n",(0,n.jsxs)(e.li,{children:["SST calls ",(0,n.jsx)(e.code,{children:"checkOutputParameters"})," to ensure that the statistic output object's parameters are valid and the OutputObject constructed correctly. For example, if the output requires a filename and none was given, the output can flag that error here.","\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsxs)(e.li,{children:["If ",(0,n.jsx)(e.code,{children:"checkoutOutputParameters()"})," fails, SST will call ",(0,n.jsx)(e.code,{children:"printUsage"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["SST calls ",(0,n.jsx)(e.code,{children:"startOfSimulation"})," when the simulation is fully constructed and ready to start. Any pre-simulation preparation such as opening files can be done here."]}),"\n"]}),"\n",(0,n.jsx)(e.h4,{id:"output-generation",children:"Output generation"}),"\n",(0,n.jsxs)(e.p,{children:["When output needs to be generated, the following calls to the output object will be made for ",(0,n.jsx)(e.em,{children:"each statistic registered to the output"}),"."]}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"implStartOutputEntries"})}),"\n",(0,n.jsxs)(e.li,{children:["Some number of ",(0,n.jsx)(e.code,{children:"outputFields"})," - these are called by the statistic itself to generate output each of its fields in the desired format."]}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"implStopOutputEntries"})}),"\n"]}),"\n",(0,n.jsx)(e.h4,{id:"end-of-simulation",children:"End of simulation"}),"\n",(0,n.jsx)(e.p,{children:"When simulation ends, the following functions are called on each statistic output object."}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"endOfSimulation"})}),"\n",(0,n.jsx)(e.li,{children:"Destructor"}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"implementation",children:"Implementation"}),"\n",(0,n.jsxs)(e.p,{children:["To implement a new StatisticFieldsOutput, create a class that inherits from ",(0,n.jsx)(e.code,{children:"SST::StatisticFieldsOutput"})," and uses the ",(0,n.jsx)(e.code,{children:"SST_ELI_REGISTER_DERIVED"})," macro to declare itself a derivative from the element type ",(0,n.jsx)(e.code,{children:"StatisticOutput"})," as shown below."]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-cpp",metastring:'title="Example custom StatisticOutput derived from StatisticFieldsOutput"',children:'#include <sst/core/statapi/statoutput.h>\n\nclass ExampleStatOutput : public StatisticFieldsOutput\n{\npublic:\n    SST_ELI_REGISTER_DERIVED(\n        StatisticOutput,                // Base class name (element type)\n        ExampleStatOutput,              // Class name\n        "example",                      // Library\n        "outputexample",                // ELI name\n        SST_ELI_ELEMENT_VERSION(1,0,0), // ELI version\n        "Example StatisticOutput"       // Description\n    )\n    \n    // ... rest of class\n};\n'})}),"\n",(0,n.jsxs)(e.p,{children:["StatisticOutput types derived from ",(0,n.jsx)(e.code,{children:"StatisticFieldOutput"})," should implement the following functions."]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./constructor",children:"Constructor"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./destructor",children:"Destructor"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./implStartOutputEntries",children:"implStartOutputEntries"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./implStopOutputEntries",children:"implStopOutputEntries"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./checkOutputParameters",children:"checkOutputParameters"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./printUsage",children:"printUsage"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./startOfSimulatin",children:"startOfSimulation()"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./endOfSimulation",children:"endOfSimulation()"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./outputField",children:"outputField()"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./serialize_order",children:"serialize_order"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Outputs may also need to implement these."}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./acceptsGroups",children:"acceptsGroups"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./supportsDynamicRegistration",children:"supportsDynamicRegistration"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"These additional functions are available for use by StatisticFieldsOutput objects."}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getAbsolutePathForOutputFiel",children:"getAbsolutePathForOutputFile"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getCurrentSimCycle",children:"getCurrentSimCycle"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getFieldInfoArray",children:"getFieldInfoArray"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getFieldTypeShortName",children:"getFieldTypeShortName"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getNumRanks",children:"getNumRanks"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getOutputParameters",children:"getOutputParameters"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getRank",children:"getRank"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getRegisteredField",children:"getRegisteredField"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getSimulationOutput",children:"getSimulationOutput"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./getStatisticOutputName",children:"getStatisticOutputName"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"./setStatisticOutputName",children:"setStatisticOutputName"})}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:"./lock",children:"lock"}),"/",(0,n.jsx)(e.a,{href:"./unlock",children:"unlock"})]}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"parallel-considerations",children:"Parallel considerations"}),"\n",(0,n.jsxs)(e.p,{children:["In parallel SST executions, each rank has its own instance of a StatisticOutput object while threads on a rank share the same instance. Be aware of this when creating an output object that creates files. The ",(0,n.jsx)(e.code,{children:"StatisticFieldsOutput"})," class ensures statistics are generated serially but if an output object inherits from ",(0,n.jsx)(e.code,{children:"StatisticOutput"})," directly or overrides certain API functions from ",(0,n.jsx)(e.code,{children:"StatisticOutput"})," that ",(0,n.jsx)(e.code,{children:"StatisticFieldsOutput"})," provides an implementation for, the object will need to manage threading itself. Those specific functions are not documented here as they are part of the ",(0,n.jsx)(e.code,{children:"StatisticOutput"})," API but not part of ",(0,n.jsx)(e.code,{children:"StatisticFieldsOutput"}),"."]}),"\n",(0,n.jsx)(e.h2,{id:"header",children:"Header"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-cpp",children:"#include <sst/core/statapi/statoutput.h>\n"})})]})}function u(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}}}]);