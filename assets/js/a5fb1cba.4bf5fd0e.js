"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[57866],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var a=t(96540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}},87457:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"core/realtime/class","title":"SST::RealTimeAction","description":"RealTimeActions are actions that SST executes in response to an OS signal such as SIGINT or SIGUSR1. See the signal handling guide for more information about using these actions.","source":"@site/../docs/core/realtime/class.md","sourceDirName":"core/realtime","slug":"/core/realtime/class","permalink":"/sst-docs/docs/core/realtime/class","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/realtime/class.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1729787241000,"frontMatter":{"title":"SST::RealTimeAction"},"sidebar":"core","previous":{"title":"Uniform Distribution","permalink":"/sst-docs/docs/core/rng/uniform"},"next":{"title":"constructor","permalink":"/sst-docs/docs/core/realtime/constructor"}}');var s=t(74848),i=t(28453);const o={title:"SST::RealTimeAction"},c=void 0,r={},l=[{value:"Parallel execution",id:"parallel-execution",level:2},{value:"Header",id:"header",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["RealTimeActions are actions that SST executes in response to an OS signal such as ",(0,s.jsx)(n.code,{children:"SIGINT"})," or ",(0,s.jsx)(n.code,{children:"SIGUSR1"}),". See the ",(0,s.jsx)(n.a,{href:"/sst-docs/docs/guides/features/signal",children:"signal handling guide"})," for more information about using these actions."]}),"\n",(0,s.jsx)(n.p,{children:"RealTimeActions are SST elements and can be registered with SST as part of an element library."}),"\n",(0,s.jsxs)(n.p,{children:["The following example creates an element ",(0,s.jsx)(n.code,{children:"examples.helloExample"})," which when triggered via a signal, prints the rank, thread, and simulated time."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",metastring:'title="helloExample.h"',children:'#include <sst/core/realtimeAction.h>\n#include <sst/core/rankInfo.h>\n\nclass ExampleRealTimeAction : public SST::RealTimeAction\n{\n    public:\n\n    // ELI macro to register action with SST-Core\n    SST_ELI_REGISTER_REALTIMEACTION(\n        ExampleRealTimeAction,                  // Class\n        "examples",                             // Library name\n        "helloExample",                         // Element name\n        SST_ELI_ELEMENT_VERSION(0, 1, 0),       // Version\n        "Prints hello in response to a signal") // Description\n\n    ExampleRealTimeAction(); // Constructor\n    ~ExampleRealTimeAction(); // Destructor\n\n    virtual void execute() override; // Action to take\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",metastring:'title="helloExample.cc"',children:'#include <sst/core/sst_config.h>\n\n#include "helloExample.h"\n\n#include <sst/core/realtimeAction.h> \n#include <sst/core/unitAlgebra.h>\n#include <sst/core/rankInfo.h>\n\nExampleRealTimeAction::ExampleRealTimeAction() { }\n\n~ExampleRealTimeAction::ExampleRealTimeAction() { }\n\nvoid ExampleRealTimeAction::execute()\n{\n    Output sim_output = getSimulationOutput();\n    RankInfo rank     = getRank();\n\n    sim_output.output("Hello from rank %u, thread %u at simulated time %s.\\n", \n        rank.rank, rank.thread, getElapsedSimTime().toStringBestSI().c_str());\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"parallel-execution",children:"Parallel execution"}),"\n",(0,s.jsxs)(n.p,{children:["Actions are executed only when SST's global state is synchronized so unlike most element objects, ",(0,s.jsx)(n.em,{children:"actions may perform synchronization and invoke MPI calls"}),".\nEach thread and/or rank instantiates its own action object. When a signal causes an action to execute, each rank and thread calls ",(0,s.jsx)(n.code,{children:"execute()"})," on its local instance of the action."]}),"\n",(0,s.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/realtimeAction.h>\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);