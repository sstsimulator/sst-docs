"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[33943],{28453:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>l});var n=t(96540);const r={},s=n.createContext(r);function o(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:a},e.children)}},88415:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>i,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"config/component/addGlobalParamSet","title":"addGlobalParamSet","description":"\\"GlobalParam\\" has been renamed to \\"SharedParam\\" in SST 15.0 to better reflect the shared rather than strictly global nature of these parameter sets. See addSharedParamSet instead.","source":"@site/../docs/config/component/addGlobalParamSet.md","sourceDirName":"config/component","slug":"/config/component/addGlobalParamSet","permalink":"/sst-docs/docs/config/component/addGlobalParamSet","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/config/component/addGlobalParamSet.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"addGlobalParamSet"},"sidebar":"config","previous":{"title":"addParams","permalink":"/sst-docs/docs/config/component/addParams"},"next":{"title":"addSharedParamSet","permalink":"/sst-docs/docs/config/component/addSharedParamSet"}}');var r=t(74848),s=t(28453);const o={title:"addGlobalParamSet"},l=void 0,d={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Import",id:"import",level:2},{value:"Import",id:"import-1",level:2}];function m(e){const a={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.admonition,{title:"Deprecated",type:"warning",children:(0,r.jsxs)(a.p,{children:['"GlobalParam" has been renamed to "SharedParam" in SST 15.0 to better reflect the shared rather than strictly global nature of these parameter sets. See ',(0,r.jsx)(a.a,{href:"/sst-docs/docs/config/component/addSharedParamSet",children:(0,r.jsx)(a.code,{children:"addSharedParamSet"})})," instead."]})}),"\n",(0,r.jsx)(a.p,{children:"Add a global parameter set to a component's parameters. Using global parameter sets reduces memory overhead and can be useful when simulating very large systems where many components have a common parameter subset. Parameters set directly on a component take precedence over global parameters if there is a conflict."}),"\n",(0,r.jsx)(a.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:"component.addGlobalParamSet(set_name)\n"})}),"\n",(0,r.jsx)(a.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"set_name"})," (type: string) Name of the global parameter set. The name must be registered with SST using ",(0,r.jsx)(a.a,{href:"/sst-docs/docs/config/general/addGlobalParams",children:(0,r.jsx)(a.code,{children:"sst.addGlobalParams"})}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(a.h2,{id:"import",children:"Import"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:'import sst\n\nglobal_params = { \n    "param0" : "val0",\n    "param1" : "val1",\n    "param2" : "val2",\n}\n\nsst.addGlobalParams("example_params", global_params)\n\ncomponent0 = sst.Component(...)\ncomponent1 = sst.Component(...)\n\n#highlight-start\ncomponent0.addGlobalParamSet("example_params")\ncomponent1.addGlobalParamSet("example_params")\n#highlight-end\n'})}),"\n",(0,r.jsx)(a.h2,{id:"import-1",children:"Import"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:"import sst\n"})})]})}function i(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);