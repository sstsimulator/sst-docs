"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5215],{25053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var s=n(74848),i=n(28453);const r={title:"mask-mpi"},o=void 0,c={id:"elements/maskmpi/intro",title:"mask-mpi",description:"MASK-MPI is a simulator-specific MPI implementation which allows lightweight MPI skeleton applications to be run within the Mercury simulation environment. MASK-MPI supports relatively complex MPI applications, but it is not feature-complete.",source:"@site/../docs/elements/maskmpi/intro.md",sourceDirName:"elements/maskmpi",slug:"/elements/maskmpi/intro",permalink:"/sst-docs/docs/elements/maskmpi/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/elements/maskmpi/intro.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1729787241e3,frontMatter:{title:"mask-mpi"},sidebar:"elements",previous:{title:"macro",permalink:"/sst-docs/docs/elements/macro/intro"},next:{title:"memHierarchy",permalink:"/sst-docs/docs/elements/memHierarchy/intro"}},l={},a=[{value:"Required dependencies",id:"required-dependencies",level:3},{value:"Optional dependencies",id:"optional-dependencies",level:3}];function m(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h3:"h3",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"MASK-MPI"})," is a simulator-specific MPI implementation which allows lightweight MPI skeleton applications to be run within the ",(0,s.jsx)(t.a,{href:"/sst-docs/docs/elements/mercury/intro",children:(0,s.jsx)(t.em,{children:"Mercury"})})," simulation environment. MASK-MPI supports relatively complex MPI applications, but it is not feature-complete."]}),"\n",(0,s.jsx)(t.admonition,{title:"At a Glance",type:"note",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Source Code:"})," ",(0,s.jsx)(t.a,{href:"https://github.com/sstsimulator/sst-elements/src/sst/elements/mask-mpi",children:"sst-elements/.../mask-mpi"})," \xa0",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"SST Name:"})," ",(0,s.jsx)(t.code,{children:"mask-mpi"}),"  \xa0",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Maturity Level"})," Mature (3) \xa0",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Development Path:"})," Active \xa0",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Last Released:"})," 14.1"]})}),"\n",(0,s.jsx)(t.h3,{id:"required-dependencies",children:"Required dependencies"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"None"})}),"\n",(0,s.jsx)(t.h3,{id:"optional-dependencies",children:"Optional dependencies"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"None"})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);