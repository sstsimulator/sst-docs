"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[31743],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var i=n(96540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}},90496:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"core/eli/document/sst_eli_document_profile_points","title":"SST_ELI_DOCUMENT_PROFILE_POINTS","description":"Availability: Component, SubComponent","source":"@site/../docs/core/eli/document/sst_eli_document_profile_points.md","sourceDirName":"core/eli/document","slug":"/core/eli/document/sst_eli_document_profile_points","permalink":"/sst-docs/docs/core/eli/document/sst_eli_document_profile_points","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/eli/document/sst_eli_document_profile_points.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1684522150000,"frontMatter":{"title":"SST_ELI_DOCUMENT_PROFILE_POINTS","sidebar_label":"Profile points"},"sidebar":"core","previous":{"title":"Ports","permalink":"/sst-docs/docs/core/eli/document/sst_eli_document_ports"},"next":{"title":"Statistics","permalink":"/sst-docs/docs/core/eli/document/sst_eli_document_statistics"}}');var o=n(74848),s=n(28453);const r={title:"SST_ELI_DOCUMENT_PROFILE_POINTS",sidebar_label:"Profile points"},l=void 0,c={},a=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const t={admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:'/* Macro */\nSST_ELI_DOCUMENT_PROFILE_POINTS (\n    { "point_name0", "description", "Fully::Qualified::ProfilePoint::API" },\n    { "point_name1", "description", "Fully::Qualified::ProfilePoint::API" },\n    { "point_name2", "description", "Fully::Qualified::ProfilePoint::API" },\n    ...\n    { "point_nameX", "description", "Fully::Qualified::ProfilePoint::API" }\n )\n'})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.em,{children:"Availability:"})," Component, SubComponent"]}),"\n",(0,o.jsx)(t.p,{children:"Use this macro to document that a (Sub)Component supports attaching a particular kind of profiler. The macro accepts a list of triples where each triple contains a name for the point to which a profiler can be attached, a description of the profiling point, and the API required for profilers attached to the documented point."}),"\n",(0,o.jsx)(t.admonition,{title:"Important",type:"info",children:(0,o.jsxs)(t.p,{children:["This macro must reside in a ",(0,o.jsx)(t.code,{children:"public"})," section of the object's header file."]})}),"\n",(0,o.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"point_nameX"})," (string) The name of the profiling point."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"description"})," (string) Description of the profiling point. This value is displayed when ",(0,o.jsx)(t.code,{children:"sst-info"})," is run at the command line."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"API"})," (string) The fully qualified name of the profiler API that can be attached to this point. Any profiler loaded into the slot must implement the named API."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/simpleElementExample/basicParams.h"',children:'/* simpleElementExample/basicParams.h */\n SST_ELI_DOCUMENT_PROFILE_POINTS(\n    { "clock_profiler", "A profiler to track time spent in clock handling", "SST::Profile::ClockHandlerProfileTool" }\n )\n'})}),"\n",(0,o.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/component.h> // or\n#include <sst/core/subcomponent.h>\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);