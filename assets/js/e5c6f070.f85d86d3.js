"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[49725],{28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>c});var n=r(96540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}},72998:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"core/portmodule/getCurrentSimTime","title":"getCurrentSimTime","description":"Returns the current simulation time as a cycle count relative to the clock frequency provided via the TimeConverter tc or string base.","source":"@site/../docs/core/portmodule/getCurrentSimTime.md","sourceDirName":"core/portmodule","slug":"/core/portmodule/getCurrentSimTime","permalink":"/sst-docs/docs/core/portmodule/getCurrentSimTime","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/portmodule/getCurrentSimTime.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"getCurrentSimTime"},"sidebar":"core","previous":{"title":"getElapsedSimTime","permalink":"/sst-docs/docs/core/portmodule/getElapsedSimTime"},"next":{"title":"getCurrentSimTimeMicro","permalink":"/sst-docs/docs/core/portmodule/getCurrentSimTimeMicro"}}');var i=r(74848),s=r(28453);const o={title:"getCurrentSimTime"},c=void 0,l={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function a(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"SimTime_t getCurrentSimTime(TimeConverter* tc) const; // Deprecated in SST 15.0\nSimTime_t getCurrentSimTime(TimeConverter tc) const;\nSimTime_t getCurrentSimTIme(const std::string& base)const;\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Returns the current simulation time as a cycle count relative to the clock frequency provided via the TimeConverter ",(0,i.jsx)(t.code,{children:"tc"})," or string ",(0,i.jsx)(t.code,{children:"base"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"tc"})," (TimeConverter) A time converter representing a clock cycle"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"base"}),' (string) A string of either a clock period (e.g., "1ns") or frequency (e.g., "200MHz"). Units are required and SI units are fine.']}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"returns"})," (SimTime_t) Current simulation time as a cycle count in terms of the clock frequency provided to the function."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'std::string period = "2ns";\noutput.output("For a clock period of 2ns, the cycle count is %" PRIu64 " cycles.\\n", getCurrentSimTime(period));\n'})}),"\n",(0,i.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/portModule.h>\n"})})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);