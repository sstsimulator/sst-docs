"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[43793],{19703:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"core/iface/SimpleNetwork/setup","title":"setup","description":"See setup() for a description of SST\'s setup phase and the use of this function. The (Sub)Component that loaded a SimpleNetwork interface should call this function during its own setup() function. A SimpleNetwork interface may implement this function if needed, but it is not required.","source":"@site/../docs/core/iface/SimpleNetwork/setup.md","sourceDirName":"core/iface/SimpleNetwork","slug":"/core/iface/SimpleNetwork/setup","permalink":"/sst-docs/docs/core/iface/SimpleNetwork/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/iface/SimpleNetwork/setup.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1684522150000,"frontMatter":{"title":"setup"},"sidebar":"core","previous":{"title":"init","permalink":"/sst-docs/docs/core/iface/SimpleNetwork/init"},"next":{"title":"complete","permalink":"/sst-docs/docs/core/iface/SimpleNetwork/complete"}}');var i=n(74848),r=n(28453);const o={title:"setup"},l=void 0,c={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Implementing setup() in a SimpleNetwork",id:"example-1-implementing-setup-in-a-simplenetwork",level:3},{value:"Example 2: Supporting SimpleNetwork&#39;s setup() at an endpoint",id:"example-2-supporting-simplenetworks-setup-at-an-endpoint",level:3},{value:"Header",id:"header",level:2}];function a(e){const t={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"virtual void setup();\n"})}),"\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"../../component/lifecycle/setup",children:(0,i.jsx)(t.code,{children:"setup()"})})," for a description of SST's setup phase and the use of this function. The (Sub)Component that loaded a SimpleNetwork interface should call this function during its own ",(0,i.jsx)(t.code,{children:"setup()"})," function. A SimpleNetwork interface may implement this function if needed, but it is not required."]}),"\n",(0,i.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Network interface"})," \xa0",(0,i.jsx)(t.br,{}),"\n","This function may be optionally implemented."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Endpoint"})," \xa0",(0,i.jsx)(t.br,{}),"\n","Call ",(0,i.jsx)(t.code,{children:"setup()"})," on the interface during the ",(0,i.jsx)(t.code,{children:"setup()"})," phase as SST does not automatically call this function on SubComponents."]}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.h3,{id:"example-1-implementing-setup-in-a-simplenetwork",children:"Example 1: Implementing setup() in a SimpleNetwork"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/merlin/interfaces/linkControl.cc"',children:"// The LinkControl's setup function clears out its `init_events` queue\nvoid LinkControl::setup()\n{\n    while ( init_events.size() ) {\n        delete init_events.front();\n        init_events.pop_front();\n    }\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"example-2-supporting-simplenetworks-setup-at-an-endpoint",children:"Example 2: Supporting SimpleNetwork's setup() at an endpoint"}),"\n",(0,i.jsxs)(t.p,{children:["An endpoint should call ",(0,i.jsx)(t.code,{children:"setup()"})," on a SimpleNetwork interface in its own ",(0,i.jsx)(t.code,{children:"setup()"})," function."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"void Endpoint::setup() \n{\n    net_iface->setup();\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/interfaces/simpleNetwork.h>\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);