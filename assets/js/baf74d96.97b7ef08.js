"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[48528],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},45539:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"elements/cramsim/intro","title":"cramSim","description":"The cramSim element implements a memory controller and memory models for DDR and HBM. The controller can either accept a trace file or can be connected to memHierarchy components to use within a larger simulation. More detailed information resides in a README in the cramSim source repository.","source":"@site/../docs/elements/cramsim/intro.md","sourceDirName":"elements/cramsim","slug":"/elements/cramsim/intro","permalink":"/sst-docs/docs/elements/cramsim/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/elements/cramsim/intro.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"cramSim"},"sidebar":"elements","previous":{"title":"cassini","permalink":"/sst-docs/docs/elements/cassini/intro"},"next":{"title":"ember","permalink":"/sst-docs/docs/elements/ember/intro"}}');var i=t(74848),r=t(28453);const o={title:"cramSim"},a=void 0,c={},m=[{value:"Required dependencies",id:"required-dependencies",level:3},{value:"Optional dependencies",id:"optional-dependencies",level:3},{value:"Additional Documentation",id:"additional-documentation",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"cramSim"})," element implements a memory controller and memory models for DDR and HBM. The controller can either accept a trace file or can be connected to memHierarchy components to use within a larger simulation. More detailed information resides in a README in the cramSim source repository."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"This element was been renamed from 'CramSim' to 'cramSim' in an effort to standardize library naming conventions in SST Elements (lowercase or camelcase). Input files from pre-SST 13.1 need to be updated accordingly."})}),"\n",(0,i.jsx)(n.admonition,{title:"At a Glance",type:"note",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Source Code:"})," ",(0,i.jsx)(n.a,{href:"https://github.com/sstsimulator/sst-elements/tree/master/src/sst/elements/cramSim",children:"sst-elements/.../cramSim"})," \xa0",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"SST Name:"})," ",(0,i.jsx)(n.code,{children:"cramSim"})," \xa0",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Maturity Level:"})," Prototype (2) \xa0",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Development Path:"})," Maintenance \xa0",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Last Released:"})," SST 15.0"]})}),"\n",(0,i.jsx)(n.h3,{id:"required-dependencies",children:"Required dependencies"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"None"})}),"\n",(0,i.jsx)(n.h3,{id:"optional-dependencies",children:"Optional dependencies"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"None"})}),"\n",(0,i.jsx)(n.h2,{id:"additional-documentation",children:"Additional Documentation"}),"\n",(0,i.jsxs)(n.p,{children:["The cramSim library includes a ",(0,i.jsx)(n.a,{href:"https://github.com/sstsimulator/sst-elements/tree/master/src/sst/elements/cramSim/README",children:"README"})," with additional documentation."]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);