"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[98434],{28453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>i});var n=r(96540);const a={},s=n.createContext(a);function l(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(s.Provider,{value:t},e.children)}},51534:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"core/unitalgebra/invert","title":"invert","description":"Take the reciprocal of the UnitAlgebra. For example \\"5MHz\\" will become \\"200ns\\".","source":"@site/../docs/core/unitalgebra/invert.md","sourceDirName":"core/unitalgebra","slug":"/core/unitalgebra/invert","permalink":"/sst-docs/docs/core/unitalgebra/invert","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/unitalgebra/invert.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1684522150000,"frontMatter":{"title":"invert"},"sidebar":"core","previous":{"title":"operator<=","permalink":"/sst-docs/docs/core/unitalgebra/complteq"},"next":{"title":"getDoubleValue","permalink":"/sst-docs/docs/core/unitalgebra/getDoubleValue"}}');var a=r(74848),s=r(28453);const l={title:"invert"},i=void 0,c={},o=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"UnitAlgebra& invert();\n"})}),"\n",(0,a.jsx)(t.p,{children:'Take the reciprocal of the UnitAlgebra. For example "5MHz" will become "200ns".'}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"returns"})," The UnitAlgebra (",(0,a.jsx)(t.code,{children:"this*"}),") after taking the reciprocal."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:'SST::UnitAlgebra* num = new UnitAlgebra("5MHz");\nUnitAlgebra clockPeriod = num->invert();\n'})}),"\n",(0,a.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/unitalgebra.h>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);