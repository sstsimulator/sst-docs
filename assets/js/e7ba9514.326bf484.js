"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[67361],{28453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>l});var s=n(96540);const a={},i=s.createContext(a);function o(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),s.createElement(i.Provider,{value:e},t.children)}},70253:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"core/statoutput/getAbsolutePathForOutputFile","title":"getAbsolutePathForOutputFile","description":"Use this function to place an output file called filename in SST\'s global output directory. This function should always be used when creating files so that all simulation files are placed in the same output directory. Note that if filename already contains an absolute path, it will not be placed in the SST output directory. If filename contains a relative path, it will be placed relative to the SST output directory.","source":"@site/../docs/core/statoutput/getAbsolutePathForOutputFile.md","sourceDirName":"core/statoutput","slug":"/core/statoutput/getAbsolutePathForOutputFile","permalink":"/sst-docs/docs/core/statoutput/getAbsolutePathForOutputFile","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/statoutput/getAbsolutePathForOutputFile.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"getAbsolutePathForOutputFile"},"sidebar":"core","previous":{"title":"supportsDynamicRegistration","permalink":"/sst-docs/docs/core/statoutput/supportsDynamicRegistration"},"next":{"title":"getCurrentSimCycle","permalink":"/sst-docs/docs/core/statoutput/getCurrentSimCycle"}}');var a=n(74848),i=n(28453);const o={title:"getAbsolutePathForOutputFile"},l=void 0,r={},u=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function c(t){const e={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"std::string getAbsolutePathForOutputFile(const std::string& filename);\n"})}),"\n",(0,a.jsxs)(e.p,{children:["Use this function to place an output file called ",(0,a.jsx)(e.code,{children:"filename"})," in SST's global output directory. This function should always be used when creating files so that all simulation files are placed in the same output directory. Note that if ",(0,a.jsx)(e.code,{children:"filename"})," already contains an absolute path, it will not be placed in the SST output directory. If ",(0,a.jsx)(e.code,{children:"filename"})," contains a relative path, it will be placed relative to the SST output directory."]}),"\n",(0,a.jsx)(e.admonition,{type:"info",children:(0,a.jsx)(e.p,{children:"The SST convention is that any absolute filepaths will be respected and all relative filepaths will be placed relative to the SST output directory."})}),"\n",(0,a.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"filename"})," (std::string&) The filename to get an absolute path for"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"returns"})," (std::string) The absolute filepath for the filename"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:'std::string filename = "statoutput_" + std::to_string(getRank().rank) + ".txt";\n//highlight-next-line\nfilename = getAbsolutePathForOutputFile(filename);\n\nFILE* fp = fopen(filename.c_str(), "w");\n'})}),"\n",(0,a.jsx)(e.h2,{id:"header",children:"Header"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"#include <sst/core/statapi/statoutput.h>\n"})})]})}function d(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(c,{...t})}):c(t)}}}]);