"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[74961],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var r=n(96540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},51527:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"core/portmodule/constructor","title":"constructor","description":"This constructor is called when a PortModule is loaded.","source":"@site/../docs/core/portmodule/constructor.md","sourceDirName":"core/portmodule","slug":"/core/portmodule/constructor","permalink":"/sst-docs/docs/core/portmodule/constructor","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/portmodule/constructor.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"constructor"},"sidebar":"core","previous":{"title":"PortModule","permalink":"/sst-docs/docs/core/portmodule/class"},"next":{"title":"destructor","permalink":"/sst-docs/docs/core/portmodule/destructor"}}');var o=n(74848),s=n(28453);const a={title:"constructor"},l=void 0,c={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function i(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"// PortModule constructor\nPortModuleClassName(SST::Params& params);\n// Base SST::Module class constructor\nSST::PortModule();\n"})}),"\n",(0,o.jsx)(t.p,{children:"This constructor is called when a PortModule is loaded."}),"\n",(0,o.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"params"})," (Params&) The parameter set passed into the module by the loading sub(component)."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"returns"})," (PortModule) The newly constructed PortModule"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",metastring:'title="Example PortModule that randomly drops events; header file"',children:'class DropEvent : public SST::PortModule\n{\npublic:\n    SST_ELI_REGISTER_PORTMODULE(\n        DropEvent,                      // Class name\n        "example",                      // Library name, the \'lib\' in SST\'s lib.name format\n        "drop",                         // Name used to refer to this port module, the \'name\' in SST\'s lib.name format\n        SST_ELI_ELEMENT_VERSION(1,0,0), // A version number\n        "Randomly drops events")        // Description\n\n    SST_ELI_DOCUMENT_PARAMS(\n        { "drop_probability", "Set the probability of a dropped event between 0\\% and 100\\%", "10",},\n        { "seed", "Seed to use for random number generation", "1" }\n    )\n    //highlight-next-line\n    DropEvent(Params& params);\n    ~DropEvent();\n\n    void eventSent(uintptr_t key, Event*& ev) override;\n    void interceptHandler(uintptr_t key, Event*& ev, bool& cancel) override;\n\n    bool installOnReceive() override { return true; }\n    bool installOnSend() override { return false; }\n\nprivate:\n    SST::RNG::MersenneRNG * rng;\n    uint32_t probability;\n};\n'})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",metastring:'title="Example constructor implementation for above class"',children:'DropEvent::DropEvent(Params& params) : PortModule()\n{\n    rng = new SST::RNG::MersenneRNG(params.find<unsigned>("seed", 1));\n    probability = params.find<uint32_t>("drop_probability", 10);\n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/portModule.h>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}}}]);