"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[34697],{16739:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"core/link/addRecvLatency","title":"addRecvLatency","description":"Set additional latency to be added to all events that come in on this link.","source":"@site/../docs/core/link/addRecvLatency.md","sourceDirName":"core/link","slug":"/core/link/addRecvLatency","permalink":"/sst-docs/docs/core/link/addRecvLatency","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/link/addRecvLatency.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1716583959000,"frontMatter":{"title":"addRecvLatency"},"sidebar":"core","previous":{"title":"addSendLatency","permalink":"/sst-docs/docs/core/link/addSendLatency"},"next":{"title":"getDefaultTimeBase","permalink":"/sst-docs/docs/core/link/getDefaultTimeBase"}}');var c=t(74848),a=t(28453);const d={title:"addRecvLatency"},i=void 0,l={},r=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function o(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-cpp",children:"void addRecvLatency(int cycles, const std::string& timebase);\nvoid addRecvLatency(SimTime_t cycles, TimeConverter* timebase);\n"})}),"\n",(0,c.jsx)(n.p,{children:"Set additional latency to be added to all events that come in on this link."}),"\n",(0,c.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"cycles"})," (int or SimTime_t) number of cycles of latency to add"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"timebase"})," (std::string or TimeConverter*) Base units for cycles"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-cpp",children:'// Configure a link connected to a port named \'port\' \nSST::Link* link = configureLink("port", new Event::Handler2<example,&example::handleEvent>(this));\n\n// Add 20ns of latency\nlink->addRecvLatency(1, "20ns");\n\n// Add 4*1ns = 4ns of latency\nlink->addRecvLatency(4, "1GHz");\n\n// Total latency will be 20ns + 4ns + <amount configured on link in input file> \n'})}),"\n",(0,c.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/link.h>\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var s=t(96540);const c={},a=s.createContext(c);function d(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:d(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);