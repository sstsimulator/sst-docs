"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[52853],{28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>r});var t=o(96540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}},55400:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"core/component/load/isSubComponentLoadableUsingAPI","title":"isSubComponentLoadableUsingAPI","description":"Availability: Component, SubComponent, ComponentExtension","source":"@site/../docs/core/component/load/isSubComponentLoadableUsingAPI.md","sourceDirName":"core/component/load","slug":"/core/component/load/isSubComponentLoadableUsingAPI","permalink":"/sst-docs/docs/core/component/load/isSubComponentLoadableUsingAPI","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/component/load/isSubComponentLoadableUsingAPI.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1684522150000,"frontMatter":{"title":"isSubComponentLoadableUsingAPI"},"sidebar":"core","previous":{"title":"isUserSubComponentLoadableUsingAPI","permalink":"/sst-docs/docs/core/component/load/isUserSubComponentLoadableUsingAPI"},"next":{"title":"doesSubComponentExist","permalink":"/sst-docs/docs/core/component/load/doesSubComponentExist"}}');var s=o(74848),a=o(28453);const i={title:"isSubComponentLoadableUsingAPI"},r=void 0,c={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Header",id:"header",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"template <class T>\nbool isSubComponentLoadableUsingAPI(const std::string& subcomponent_name);\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Availability:"})," Component, SubComponent, ComponentExtension"]}),"\n",(0,s.jsx)(n.p,{children:"Check to see if a SubComponent is loadable using the API specified by the template parameter."}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"subcomponent_name"})," (string) Name of the SubComponent in SST's ",(0,s.jsx)(n.code,{children:"lib.name"})," format"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"returns"})," (bool) Whether the SubComponent is loadable using the template API"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/component.h> // or\n#include <sst/core/subcomponent.h> // or\n#include <sst/core/componentExtension.h>\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);