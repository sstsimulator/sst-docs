"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[95934],{28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var r=s(96540);const o={},n=r.createContext(o);function c(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(n.Provider,{value:t},e.children)}},98147:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"core/statoutput/acceptsGroups","title":"acceptsGroups","description":"This function may be overridden if needed.","source":"@site/../docs/core/statoutput/acceptsGroups.md","sourceDirName":"core/statoutput","slug":"/core/statoutput/acceptsGroups","permalink":"/sst-docs/docs/core/statoutput/acceptsGroups","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/statoutput/acceptsGroups.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"acceptsGroups"},"sidebar":"core","previous":{"title":"serialize_order","permalink":"/sst-docs/docs/core/statoutput/serialize_order"},"next":{"title":"supportsDynamicRegistration","permalink":"/sst-docs/docs/core/statoutput/supportsDynamicRegistration"}}');var o=s(74848),n=s(28453);const c={title:"acceptsGroups"},a=void 0,i={},u=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function p(e){const t={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"virtual bool acceptsGroups() const;\n"})}),"\n",(0,o.jsxs)(t.p,{children:["This function ",(0,o.jsx)(t.em,{children:"may"})," be overridden if needed."]}),"\n",(0,o.jsxs)(t.p,{children:["The default implementation returns ",(0,o.jsx)(t.code,{children:"false"}),". This function should return whether the StatisticOutput supports named collections of statistics called ",(0,o.jsx)(t.a,{href:"/sst-docs/docs/config/stats/group/statisticGroup",children:"Statistic Groups"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"returns"})," (bool) Whether the output object supports statistic groups"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"bool acceptsGroups() const override \n{\n    return true;\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/statapi/statoutput.h>\n"})})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);