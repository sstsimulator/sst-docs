"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[91352],{281:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"config/configJSON","title":"JSON Configuration","description":"SST configurations can be specified using a standard JSON file format with six major sections as shown.","source":"@site/../docs/config/configJSON.md","sourceDirName":"config","slug":"/config/configJSON","permalink":"/sst-docs/docs/config/configJSON","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/config/configJSON.md","tags":[],"version":"current","frontMatter":{"title":"JSON Configuration"}}');var a=e(74848),r=e(28453);const i={title:"JSON Configuration"},o=void 0,c={},p=[{value:"Program options",id:"program-options",level:2},{value:"Example",id:"example",level:3},{value:"Shared parameter sets",id:"shared-parameter-sets",level:2},{value:"Value Types",id:"value-types",level:2},{value:"JSON Configuration Format",id:"json-configuration-format",level:2},{value:"JSON Configuration Example 1",id:"json-configuration-example-1",level:2},{value:"JSON Configuration Example 2",id:"json-configuration-example-2",level:2},{value:"Using JSON configurations",id:"using-json-configurations",level:2}];function m(n){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components},{Details:e}=t;return e||function(n,t){throw new Error("Expected "+(t?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"SST configurations can be specified using a standard JSON file format with six major sections as shown.\nUnused sections may be left out of the file."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",metastring:'title="JSON configuration file format"',children:'{\n    "program_options": { ... },\n    "shared_params": { ... },\n    "statistics_options": { ... },\n    "statistics_groups": { ... },\n    "components": { ... },\n    "links": { ... }\n}\n'})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Program Options"}),": Configures general simulation options"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Shared Parameter Sets"}),": Creates shared parameter sets for use with components/subcomponents"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Global Statistics"}),": Enables global statistics and statistics options"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Statistics Groups"}),": Creates and parameterizes groups of statistics"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Components (and subcomponents)"}),": Creates and parameterizes components and subcomponents"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Links"}),": Creates and connects links between component/subcomponent ports"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"program-options",children:"Program options"}),"\n",(0,a.jsxs)(t.p,{children:["This section is for general simulation options. Use ",(0,a.jsx)(t.code,{children:"$ sst --help"})," to view available options. Many options can be passed through the configuration file as well as on the command line. In the ",(0,a.jsx)(t.code,{children:'"program_options"'})," section, use the option name without the ",(0,a.jsx)(t.code,{children:"--"})," prefix for the key, and use an appropriate value type as described in the help text for the value."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"program_options" : {\n    "key1" : "value1",\n    "key2" : "value2"\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"program_options" : {\n    "stop-at" : "300ms",\n    "print-timing-info" : "true"\n}\n'})}),"\n",(0,a.jsx)(t.h2,{id:"shared-parameter-sets",children:"Shared parameter sets"}),"\n",(0,a.jsxs)(t.p,{children:["Shared parameter sets allow multiple components to share an instance of parameters. For large simulations, putting common subsets of parameters in a shared parameter set can reduce the memory overhead needed to store parameters during simulation build. Each set needs to be given a unique name.\nTo specify shared parameters, in the form ",(0,a.jsx)(t.code,{children:"name : { key-value pairs }"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"shared_params" : [\n    "set1_name" : {\n        "param1" : "value1",\n        "param2" : "value2"\n        },\n    "set2_name" : {\n        "param1" : "value1"\n        "param2" : "vaue2"\n    }\n]\n'})}),"\n",(0,a.jsx)(t.h2,{id:"value-types",children:"Value Types"}),"\n",(0,a.jsxs)(t.p,{children:["The following types will be utilized to describe the ",(0,a.jsx)(t.em,{children:"value"})," of each potential configuration option."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Integer"}),": describes a standard integer value"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"UnitAlgebra"}),": describes a value in UnitAlgebra form such as ",(0,a.jsx)(t.em,{children:"1GHz"})," or ",(0,a.jsx)(t.em,{children:"1ps"}),".  See ",(0,a.jsx)(t.a,{href:"../../config/unitalgebra/unitalgebra.md",children:"UnitAlgebra"})]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Bool"}),": describes a boolean value as either ",(0,a.jsx)(t.em,{children:"True"})," or ",(0,a.jsx)(t.em,{children:"False"})]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"String"}),": describes a value as a string"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Type"}),": describes the values for parameter names that can be any of the aforementioned types"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"json-configuration-format",children:"JSON Configuration Format"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  // Program Options\n  "program_options" : {\n    "verbose": "Integer",\n    "stop-at": "UnitAlgebra",\n    "print-timing-info": "Bool",\n    "heartbeat-sim-period": "UnitAlgebra"\n    "heartbeat-wall-period": "UnitAlgebra",\n    "timebase": "UnitAlgebra",\n    "partitioner": "String",\n    "timeVortex": "String",\n    "interthread-links": "Bool",\n    "output-prefix-core": "String",\n    "checkpoint-sim-period": "UnitAlgebra",\n    "checkpoint-wall-period": "UnitAlgebra"\n  },\n  \n  // Shared Parameter Sets\n  "shared_params": [\n    "shared_name": {\n      "param1": "Type",\n      "param2": "Type",\n      ...\n    }\n  ],\n  \n  // Global Statistics\n  "statistics_options": {\n    "statisticLoadLevel": Integer,\n    "statisticOutput": "String",\n    "params": {\n      "outputrank": "Bool",\n      "outputsimtime": "Bool",\n      "paramN": "Type",\n      ...\n    }\n  },\n  \n  // Statistics Groups\n  "statistics_group": [\n    {\n      "name": "String",\n      "frequency": "UnitAlgebra",\n      "output": {\n        "type": "String",    // this is the fully qualified simulation output type, eg "sst.statOutputConsole"\n        "params": {\n          "param1": "Type",\n          "param2": "Type",\n          ...\n        }\n      },\n      "statistics": [\n        {\n          "name": "String",\n          "params": {\n            "resetOnOutput": "Bool",\n            "type": "String"                    // this is the fully qualified statistic type, eg "sst.AccumulatorStatistic"\n          }\n        }\n      ],\n      "components": [   // contains a list of components for which the enclosing stat group applies\n        "component0",\n        "component1",\n        ....\n      ]\n    },\n  ]\n  \n  // Components\n  "components" : [\n    {\n      // first defined component\n      "name": "String",\n      "type": "String",    // this is the fully qualified component name\n      "params": {\n        "param1": "Type",\n        "param2": "Type",\n        ...\n      },\n      "subcomponents": [\n        {\n          "slot_name": "String",\n          "slot_number": Integer,\n          "type": "String"   // this is the fully qualified subcomponent slot type\n        }\n      ],\n      "partition": {\n        "rank": Integer,\n        "thread": Integer\n      }\n    },\n    {\n      // second defined component\n      "name": "String",\n      "type": "String",    // this is the fully qualified component name\n      "params": {\n        "param1": "Type",\n        "param2": "Type",\n        ...\n      },\n      "subcomponents": [\n        {\n          "slot_name": "String",\n          "slot_number": Integer,\n          "type": "String",  // this is the fully qualified subcomponent slot type\n          "subcomponents": [      // this name-value pair array represent sub-sub-components\n            {\n              "slot_name": "String",\n              "slot_number": Integer,\n              "type": "String"  // this is the fully qualified subcomponent slot type\n            }\n          ]\n        }\n      ],\n      "partition": {\n        "rank": Integer,\n        "thread": Integer\n      }\n    }\n  ],\n  \n  // Links\n  "links": [\n    {\n      "name": "String",\n      "noCut: Bool,\n      // left hand side of the link object\n      "left": {\n        "component": "String",\n        "port": "String",\n        "latency": "UnitAlgebra"\n      },\n      // right hand side of the link object\n      "right": {\n        "component": "String",\n        "port": "string",\n        "latency": "UnitAlgebra"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(t.h2,{id:"json-configuration-example-1",children:"JSON Configuration Example 1"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"This example is based on sst-core/tests/test_Links.py"})}),"\n",(0,a.jsxs)(e,{children:[(0,a.jsx)("summary",{children:"View example "}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "program_options": {\n    "verbose": "0",\n    "stop-at": "0ns",\n    "print-timing-info": "false",\n    "timing-info-json": "",\n    "heartbeat-sim-period": "",\n    "heartbeat-wall-period": "0",\n    "timebase": "1ps",\n    "partitioner": "sst.single",\n    "timeVortex": "sst.timevortex.priority_queue",\n    "interthread-links": "false",\n    "output-prefix-core": "@x SST Core: ",\n    "checkpoint-sim-period": "",\n    "checkpoint-wall-period": "0"\n  },\n  "statistics_options": {\n    "statisticOutput": "sst.statOutputConsole"\n  },\n  "components": [\n    {\n      "name": "c1",\n      "type": "coreTestElement.coreTestLinks",\n      "params": {\n        "id": "0",\n        "link_time_base": "1 ns"\n      }\n    },\n    {\n      "name": "c0_1",\n      "type": "coreTestElement.coreTestLinks",\n      "params": {\n        "id": "1",\n        "link_time_base": "2 ns",\n        "added_send_latency": "10 ns"\n      }\n    },\n    {\n      "name": "c1_0",\n      "type": "coreTestElement.coreTestLinks",\n      "params": {\n        "id": "2",\n        "link_time_base": "3 ns",\n        "added_recv_latency": "15 ns"\n      }\n    },\n    {\n      "name": "c1_1",\n      "type": "coreTestElement.coreTestLinks",\n      "params": {\n        "id": "3",\n        "link_time_base": "4 ns",\n        "added_send_latency": "20 ns",\n        "added_recv_latency": "25 ns"\n      }\n    }\n  ],\n  "links": [\n    {\n      "name": "link_0",\n      "left": {\n        "component": "c1",\n        "port": "Wlink",\n        "latency": "2 ns"\n      },\n      "right": {\n        "component": "c1",\n        "port": "Wlink",\n        "latency": "2 ns"\n      }\n    },\n    {\n      "name": "link_0_1",\n      "left": {\n        "component": "c1",\n        "port": "Elink",\n        "latency": "4 ns"\n      },\n      "right": {\n        "component": "c0_1",\n        "port": "Wlink",\n        "latency": "4 ns"\n      }\n    },\n    {\n      "name": "link_1_1",\n      "left": {\n        "component": "c0_1",\n        "port": "Elink",\n        "latency": "8 ns"\n      },\n      "right": {\n        "component": "c1_0",\n        "port": "Wlink",\n        "latency": "8 ns"\n      }\n    },\n    {\n      "name": "link_2_3",\n      "left": {\n        "component": "c1_0",\n        "port": "Elink",\n        "latency": "12 ns"\n      },\n      "right": {\n        "component": "c1_1",\n        "port": "Wlink",\n        "latency": "12 ns"\n      }\n    },\n    {\n      "name": "link_3",\n      "left": {\n        "component": "c1_1",\n        "port": "Elink",\n        "latency": "16 ns"\n      },\n      "right": {\n        "component": "c1_1",\n        "port": "Elink",\n        "latency": "16 ns"\n      }\n    }\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(t.h2,{id:"json-configuration-example-2",children:"JSON Configuration Example 2"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"This example is based on sst-core/tests/test_StatisticsComponent_basic.py"})}),"\n",(0,a.jsxs)(e,{children:[(0,a.jsx)("summary",{children:"View example "}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "program_options": {\n    "verbose": "0",\n    "stop-at": "0ns",\n    "print-timing-info": "false",\n    "timing-info-json": "",\n    "heartbeat-sim-period": "",\n    "heartbeat-wall-period": "0",\n    "timebase": "1ps",\n    "partitioner": "sst.single",\n    "timeVortex": "sst.timevortex.priority_queue",\n    "interthread-links": "false",\n    "output-prefix-core": "@x SST Core: ",\n    "checkpoint-sim-period": "",\n    "checkpoint-wall-period": "0"\n  },\n  "statistics_options": {\n    "statisticLoadLevel": 2,\n    "statisticOutput": "sst.statOutputConsole",\n    "params": {\n      "outputrank": "False",\n      "outputsimtime": "True"\n    }\n  },\n  "statistics_group": [\n    {\n      "name": "StatGroup0",\n      "frequency": "19 ns",\n      "output": {\n        "type": "sst.statOutputConsole",\n        "params": {\n          "outputrank": "False",\n          "outputsimtime": "True"\n        }\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ],\n      "components": [\n        "StatGroupObj0",\n        "StatGroupObj1",\n        "StatGroupObj2"\n      ]\n    },\n    {\n      "name": "StatGroup1",\n      "frequency": "23 ns",\n      "output": {\n        "type": "sst.statOutputCSV",\n        "params": {\n          "outputrank": "0",\n          "filepath": "test_StatisticsComponent_basic_group_stats.csv",\n          "separator": ", "\n        }\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ],\n      "components": [\n        "StatGroupObj3",\n        "StatGroupObj4",\n        "StatGroupObj5"\n      ]\n    },\n    {\n      "name": "StatGroup2",\n      "frequency": "27 ns",\n      "output": {\n        "type": "sst.statOutputTXT",\n        "params": {\n          "outputrank": "0",\n          "filepath": "test_StatisticsComponent_basic_group_stats.txt"\n        }\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ],\n      "components": [\n        "StatGroupObj6",\n        "StatGroupObj7",\n        "StatGroupObj8"\n      ]\n    },\n    {\n      "name": "StatGroup3",\n      "frequency": "29 ns",\n      "output": {\n        "type": "sst.statOutputTXT",\n        "params": {\n          "outputrank": "0",\n          "filepath": "test_StatisticsComponent_basic_group_stats.txt"\n        }\n      },\n      "statistics": [\n        {\n          "name": "stat1_F32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_F64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ],\n      "components": [\n        "StatGroupObj9",\n        "StatGroupObj10",\n        "StatGroupObj11"\n      ]\n    }\n  ],\n  "components": [\n    {\n      "name": "StatGlobal0",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1440",\n        "seed_z": "1046",\n        "register_dynamic": "20"\n      }\n    },\n    {\n      "name": "StatGlobal1",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1441",\n        "seed_z": "1047"\n      }\n    },\n    {\n      "name": "StatBasic0",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1447",\n        "seed_z": "1053",\n        "register_dynamic": "30"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "rate": "5 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "rate": "10 ns",\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat3_I32",\n          "params": {\n            "rate": "7 ns",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat4_I64",\n          "params": {\n            "rate": "12 ns",\n            "resetOnOutput": "True",\n            "startat": "35 ns",\n            "stopat": "70 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat5_dyn",\n          "params": {\n            "rate": "16 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatBasic1",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1448",\n        "seed_z": "1054"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "rate": "6 event",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "rate": "11 events",\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat3_I32",\n          "params": {\n            "rate": "8 events",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat4_I64",\n          "params": {\n            "rate": "14 events",\n            "resetOnOutput": "True",\n            "startat": "35 ns",\n            "stopat": "70 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatBasic2",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1449",\n        "seed_z": "1055"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "rate": "20 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "rate": "16 ns",\n            "resetOnOutput": "True",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat3_I32",\n          "params": {\n            "rate": "20 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat4_I64",\n          "params": {\n            "rate": "16 ns",\n            "resetOnOutput": "True",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatBasic3",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1450",\n        "seed_z": "1056"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "rate": "9 events",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "rate": "13 events",\n            "resetOnOutput": "True",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat3_I32",\n          "params": {\n            "rate": "9 events",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat4_I64",\n          "params": {\n            "rate": "13 events",\n            "resetOnOutput": "True",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatBasic4",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1451",\n        "seed_z": "1057"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "rate": "5 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "rate": "10 ns",\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat3_I32",\n          "params": {\n            "rate": "7 ns",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat4_I64",\n          "params": {\n            "rate": "12 ns",\n            "resetOnOutput": "True",\n            "startat": "35 ns",\n            "stopat": "70 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatBasic5",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1452",\n        "seed_z": "1058"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "rate": "6 event",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "rate": "11 events",\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat3_I32",\n          "params": {\n            "rate": "8 events",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat4_I64",\n          "params": {\n            "rate": "14 events",\n            "resetOnOutput": "True",\n            "startat": "35 ns",\n            "stopat": "70 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatBasic6",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1453",\n        "seed_z": "1059"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "rate": "20 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "rate": "16 ns",\n            "resetOnOutput": "True",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat3_I32",\n          "params": {\n            "rate": "20 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat4_I64",\n          "params": {\n            "rate": "16 ns",\n            "resetOnOutput": "True",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatBasic7",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1454",\n        "seed_z": "1060"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "rate": "9 events",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "rate": "13 events",\n            "resetOnOutput": "True",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat3_I32",\n          "params": {\n            "rate": "9 events",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat4_I64",\n          "params": {\n            "rate": "13 events",\n            "resetOnOutput": "True",\n            "startat": "25 ns",\n            "stopat": "60 ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatBasic8",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1455",\n        "seed_z": "1061"\n      }\n    },\n    {\n      "name": "StatBasic9",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1456",\n        "seed_z": "1062"\n      }\n    },\n    {\n      "name": "StatBasic10",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1457",\n        "seed_z": "1063"\n      }\n    },\n    {\n      "name": "StatType0",\n      "type": "coreTestElement.StatisticsComponent.float",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1457",\n        "seed_z": "1063"\n      }\n    },\n    {\n      "name": "StatType1",\n      "type": "coreTestElement.StatisticsComponent.float",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1457",\n        "seed_z": "1063"\n      }\n    },\n    {\n      "name": "StatType2",\n      "type": "coreTestElement.StatisticsComponent.float",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1457",\n        "seed_z": "1063"\n      }\n    },\n    {\n      "name": "StatObjComp0",\n      "type": "coreTestElement.StatisticsComponent.float",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1458",\n        "seed_z": "1064"\n      },\n      "statistics": [\n        {\n          "name": "statObj0_statobj0",\n          "params": {\n            "rate": "17ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatObjComp1",\n      "type": "coreTestElement.StatisticsComponent.float",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1459",\n        "seed_z": "1065"\n      },\n      "statistics": [\n        {\n          "name": "statObj1_statobj1",\n          "params": {\n            "rate": "17ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "statObj1_statobj1",\n          "params": {\n            "rate": "17ns",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj0",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1460",\n        "seed_z": "1066"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj1",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1461",\n        "seed_z": "1067"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj2",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1462",\n        "seed_z": "1068"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj3",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1463",\n        "seed_z": "1069"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj4",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1464",\n        "seed_z": "1070"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj5",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1466",\n        "seed_z": "1071"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj6",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1466",\n        "seed_z": "1072"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj7",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1467",\n        "seed_z": "1073"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj8",\n      "type": "coreTestElement.StatisticsComponent.int",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1468",\n        "seed_z": "1074"\n      },\n      "statistics": [\n        {\n          "name": "stat1_U32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_U64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj9",\n      "type": "coreTestElement.StatisticsComponent.float",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1469",\n        "seed_z": "1075"\n      },\n      "statistics": [\n        {\n          "name": "stat1_F32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_F64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj10",\n      "type": "coreTestElement.StatisticsComponent.float",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1470",\n        "seed_z": "1076"\n      },\n      "statistics": [\n        {\n          "name": "stat1_F32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_F64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    },\n    {\n      "name": "StatGroupObj11",\n      "type": "coreTestElement.StatisticsComponent.float",\n      "params": {\n        "rng": "marsaglia",\n        "count": "101",\n        "seed_w": "1471",\n        "seed_z": "1077"\n      },\n      "statistics": [\n        {\n          "name": "stat1_F32",\n          "params": {\n            "type": "sst.AccumulatorStatistic"\n          }\n        },\n        {\n          "name": "stat2_F64",\n          "params": {\n            "resetOnOutput": "True",\n            "type": "sst.AccumulatorStatistic"\n          }\n        }\n      ]\n    }\n  ],\n  "links": null\n}\n'})})]}),"\n",(0,a.jsx)(t.h2,{id:"using-json-configurations",children:"Using JSON configurations"}),"\n",(0,a.jsxs)(t.p,{children:["JSON configuration files can be passed to SST in the same way a Python file would be. SST detects the file type based on its extension. JSON files must have a ",(0,a.jsx)(t.code,{children:".json"})," extension."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sh",children:"$ sst configuration.json\n"})})]})}function u(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(m,{...n})}):m(n)}},28453:(n,t,e)=>{e.d(t,{R:()=>i,x:()=>o});var s=e(96540);const a={},r=s.createContext(a);function i(n){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function o(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),s.createElement(r.Provider,{value:t},n.children)}}}]);