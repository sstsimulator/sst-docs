"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[55066],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(96540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}},85647:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"core/realtime/simulationCheckpoint","title":"simulationCheckpoint","description":"Causes the local thread/rank to checkpoint its state. It is critical that any action calling this function also override canInitiateCheckpoint() to return true.","source":"@site/../docs/core/realtime/simulationCheckpoint.md","sourceDirName":"core/realtime","slug":"/core/realtime/simulationCheckpoint","permalink":"/sst-docs/docs/core/realtime/simulationCheckpoint","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/realtime/simulationCheckpoint.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1729787241000,"frontMatter":{"title":"simulationCheckpoint"},"sidebar":"core","previous":{"title":"initiateInteractive","permalink":"/sst-docs/docs/core/realtime/initiateInteractive"},"next":{"title":"simulationPrintStatus","permalink":"/sst-docs/docs/core/realtime/simulationPrintStatus"}}');var s=n(74848),a=n(28453);const r={title:"simulationCheckpoint"},o=void 0,c={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"void simulationCheckpoint();\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Causes the local thread/rank to checkpoint its state. It is critical that any action calling this function also override ",(0,s.jsx)(t.a,{href:"/sst-docs/docs/core/realtime/canInitiateCheckpoint",children:(0,s.jsx)(t.code,{children:"canInitiateCheckpoint()"})})," to return ",(0,s.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'void\nCheckpointRealTImeAction::execute()\n{\n    Output sim_output = getSimulationOutput();\n    RankInfo rank     = getRank();\n\n    sim_output.output(\n        "Creating checkpoint at simulated time %s (rank=%u, thread=%u).\\n",\n            getElapsedSimTime().to_stringBestSI().c_str(), rank.rank, rank.thread);\n    \n    //highlight-next-line\n    simulationCheckpoint();\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/realtimeAction.h>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);