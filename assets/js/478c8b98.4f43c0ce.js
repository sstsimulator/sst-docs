"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[85090],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(96540);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}},40143:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"config/general/setThreadCount","title":"setThreadCount","description":"Sets the number of threads per rank for the simulation. These values can be overwritten by using \\\\-n on the command line.","source":"@site/../docs/config/general/setThreadCount.md","sourceDirName":"config/general","slug":"/config/general/setThreadCount","permalink":"/sst-docs/docs/config/general/setThreadCount","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/config/general/setThreadCount.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"setThreadCount"},"sidebar":"config","previous":{"title":"getThreadCount","permalink":"/sst-docs/docs/config/general/getThreadCount"},"next":{"title":"pushNamePrefix","permalink":"/sst-docs/docs/config/general/pushNamePrefix"}}');var r=n(74848),o=n(28453);const a={title:"setThreadCount"},i=void 0,l={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Import",id:"import",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Sets the number of threads per rank for the simulation. These values can be overwritten by using -n on the command line."}),"\n",(0,r.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"sst.setThreadCount(threads)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"threads"})," (type: int) number of threads per MPI rank to use in the simulation"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"returns"})," (type: int) number of threads per MPI rank prior to this function call"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"import sst\n\nold_thread_count = sst.setThreadCount(4)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"import",children:"Import"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"import sst\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);