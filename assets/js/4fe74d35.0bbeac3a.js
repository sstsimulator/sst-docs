"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[66885],{28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>n});var s=r(96540);const i={},a=s.createContext(i);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:t},e.children)}},92747:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"core/statoutput/serialize_order","title":"serialize_order","description":"See the serialization framework for more detail.","source":"@site/../docs/core/statoutput/serialize_order.md","sourceDirName":"core/statoutput","slug":"/core/statoutput/serialize_order","permalink":"/sst-docs/docs/core/statoutput/serialize_order","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/statoutput/serialize_order.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"serialize_order"},"sidebar":"core","previous":{"title":"outputField","permalink":"/sst-docs/docs/core/statoutput/outputField"},"next":{"title":"acceptsGroups","permalink":"/sst-docs/docs/core/statoutput/acceptsGroups"}}');var i=r(74848),a=r(28453);const o={title:"serialize_order"},n=void 0,l={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"void serialize_order(SST::Core::Serialization::serializer& ser);\n"})}),"\n",(0,i.jsxs)(t.p,{children:["See the ",(0,i.jsx)(t.a,{href:"../serialization/overview",children:"serialization framework"})," for more detail."]}),"\n",(0,i.jsx)(t.p,{children:"This function serializes the StatisticFieldsOutput object for checkpoint/restart."}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"ser"})," (Serializer) The serializer to add data to."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"returns"})," None"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",metastring:'title="Example taken from SST\'s CSV StatisticOutput "',children:"void serialize_order(SST::Core::Serialization::serializer& ser) override\n{\n    // Required: serialize base class first\n    StatisticFieldsOutput::serialize_order(ser);\n\n    // Serialize all class members\n    SST_SER(m_Separator)\n    SST_SER(m_FilePath)\n    SST_SER(m_outputRank)\n    SST_SER(m_outputSimTime)\n    SST_SER(m_outputTopHeader)\n    SST_SER(m_useCompression)\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/statapi/statoutput.h\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);