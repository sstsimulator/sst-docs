"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[88608],{28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var r=n(96540);const o={},s=r.createContext(o);function l(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(s.Provider,{value:t},e.children)}},42919:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"core/portmodule/installOnReceive","title":"installOnReceive","description":"This function is called when a PortModule is registered to a port and it determines if the PortModule will be installed on the receive side of a port. Override this function to return something other than false if needed.","source":"@site/../docs/core/portmodule/installOnReceive.md","sourceDirName":"core/portmodule","slug":"/core/portmodule/installOnReceive","permalink":"/sst-docs/docs/core/portmodule/installOnReceive","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/portmodule/installOnReceive.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"installOnReceive"},"sidebar":"core","previous":{"title":"interceptHandler","permalink":"/sst-docs/docs/core/portmodule/interceptHandler"},"next":{"title":"installOnSend","permalink":"/sst-docs/docs/core/portmodule/installOnSend"}}');var o=n(74848),s=n(28453);const l={title:"installOnReceive"},i=void 0,c={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function a(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"virtual bool installOnReceive() { return false; }\n"})}),"\n",(0,o.jsxs)(t.p,{children:["This function is called when a PortModule is registered to a port and it determines if the PortModule will be installed on the receive side of a port. Override this function to return something other than ",(0,o.jsx)(t.code,{children:"false"})," if needed."]}),"\n",(0,o.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"returns"})," (bool) Whether the PortModule should be installed on the receive side of the port."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"bool installOnReceive() override { return true; }\n\nbool installOnReceive() override { return install_on_receive; } // Class var to control installation\n"})}),"\n",(0,o.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/portModule.h>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);