"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[21771],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var r=n(96540);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}},52237:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"core/iface/SimpleNetwork/destructor","title":"destructor","description":"SST calls the SimpleNetwork destructor prior to exiting. (Sub)Components should not call the SimpleNetwork interface\'s destructor manually. SimpleNetwork interfaces should clean up any state that is not registered with SST (e.g., not a link, clock handler, statistic, etc) in their destructors.","source":"@site/../docs/core/iface/SimpleNetwork/destructor.md","sourceDirName":"core/iface/SimpleNetwork","slug":"/core/iface/SimpleNetwork/destructor","permalink":"/sst-docs/docs/core/iface/SimpleNetwork/destructor","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/iface/SimpleNetwork/destructor.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1684522150000,"frontMatter":{"title":"destructor"},"sidebar":"core","previous":{"title":"constructor","permalink":"/sst-docs/docs/core/iface/SimpleNetwork/constructor"},"next":{"title":"init","permalink":"/sst-docs/docs/core/iface/SimpleNetwork/init"}}');var s=n(74848),o=n(28453);const i={title:"destructor"},l=void 0,c={},a=[{value:"Requirements",id:"requirements",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const t={br:"br",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"~SimpleNetwork();\n"})}),"\n",(0,s.jsxs)(t.p,{children:["SST calls the SimpleNetwork destructor prior to exiting. (Sub)Components should ",(0,s.jsx)(t.em,{children:"not"})," call the SimpleNetwork interface's destructor manually. SimpleNetwork interfaces should clean up any state that is not registered with SST (e.g., not a link, clock handler, statistic, etc) in their destructors."]}),"\n",(0,s.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Network interface"})," \xa0",(0,s.jsx)(t.br,{}),"\n","Clean up any internal state that is not registered with SST."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Endpoint"})," \xa0",(0,s.jsx)(t.br,{}),"\n","Do not call this function. SST will destroy SubComponents."]}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/merlin/interfaces/linkControl.h"',children:'#include <sst/core/interfaces/simpleNetwork.h>\n\n// SubComponent API - define an API for a type of subcomponent\nclass LinkControl : public SST::Interfaces::SimpleNetwork {\npublic:\n    // Tell SST that this class is a SubComponent API\n    SST_ELI_REGISTER_SUBCOMPONENT(LinkControl, \n        "merlin",\n        "linkcontrol",\n        SST_ELI_ELEMENT_VERSION(1,0,0),\n        "Link Control module for building Merlin-enabled NICs",\n        SST::Interfaces::SimpleNetwork)\n\n    /* Rest of ELI macros */\n    LinkControl(ComponentId_t cid, Params &params, int vns);\n\n    ~LinkControl();\n\n    /* Rest of class */\n};\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/merlin/interfaces/linkControl.cc"',children:'#include <sst_config.h>\n#include "linkControl.h"\n\nLinkControl::~LinkControl()\n{\n    delete [] vn_remap_out;\n    delete [] output_queues;\n    delete [] router_credits;\n    delete [] router_return_credits;\n    delete [] input_queues;\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/interfaces/simpleNetwork.h>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);