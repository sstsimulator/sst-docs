"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53854],{28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var n=s(96540);const i={},l=n.createContext(i);function c(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(l.Provider,{value:t},e.children)}},99448:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>c,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"id":"core/eli/document/sst_eli_document_statistics","title":"SST_ELI_DOCUMENT_STATISTICS","description":"Availability: Components, SubComponents","source":"@site/../docs/core/eli/document/sst_eli_document_statistics.md","sourceDirName":"core/eli/document","slug":"/core/eli/document/sst_eli_document_statistics","permalink":"/sst-docs/docs/core/eli/document/sst_eli_document_statistics","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/eli/document/sst_eli_document_statistics.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"SST_ELI_DOCUMENT_STATISTICS","sidebar_label":"Statistics"},"sidebar":"core","previous":{"title":"Profile points","permalink":"/sst-docs/docs/core/eli/document/sst_eli_document_profile_points"},"next":{"title":"SubComponent Slots","permalink":"/sst-docs/docs/core/eli/document/sst_eli_document_subcomponent_slots"}}');var i=s(74848),l=s(28453);const c={title:"SST_ELI_DOCUMENT_STATISTICS",sidebar_label:"Statistics"},a=void 0,o={},r=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Header",id:"header",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'#define SST_ELI_DOCUMENT_STATISTICS( \n    { "stat_0", "description", "units", enable_level },\n    { "stat_1", "description", "units", enable_level },\n    ...\n    { "stat_x", "description", "units", enable_level }\n)\n'})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"Availability:"})," Components, SubComponents"]}),"\n",(0,i.jsx)(t.admonition,{title:"Important",type:"info",children:(0,i.jsxs)(t.p,{children:["This macro must reside in a ",(0,i.jsx)(t.code,{children:"public"})," section of the object's header file."]})}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"stat_x"})," (string) Name of the statistic"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"description"})," (string) Description of the statistic. This value is displayed when sst-info is run at the command line."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"units"})," (string) Units for the statistic's value. For example 'cycles' or 'MB'. This value is displayed when sst-info is run at the command line."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"enable_level"})," (int) Integer between 1 and 7. The statistic will be generated if the user configures the simulation enable level to be greater than or equal to this number."]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"stat_X"})," must follow SST's ",(0,i.jsx)(t.a,{href:"/sst-docs/docs/guides/dev/naming",children:"element naming conventions"}),"."]})}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.h3,{id:"example-1",children:"Example 1"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/simpleElementExample/example1.h"',children:'SST_ELI_DOCUMENT_STATISTICS( \n    {"EventSizeReceived", "Records the payload size of each event received", "bytes", 1}\n)\n'})}),"\n",(0,i.jsx)(t.h3,{id:"example-2",children:"Example 2"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/simpleElementExample/basicStatistics.h"',children:'SST_ELI_DOCUMENT_STATISTICS(\n    {"UINT32_statistic", "Statistic that records unsigned 32-bit values", "unitless", 1},\n    {"UINT32_statistic_duplicate", "Statistic that records unsigned 32-bit values. Multiple stats record values to this statistic.", "unitless", 1},\n    {"UINT64_statistic", "Statistic that records unsigned 64-bit values", "unitless", 2},\n    {"INT32_statistic",  "Statistic that records signed 32-bit values", "unitless", 3},\n    {"INT64_statistic",  "Statistic that records signed 64-bit values", "unitless", 3},\n    {"SUBID_statistic", "Statistic to demonstrate SubIDs to obtain multiple instances of the same statistic name. Type is double.", "unitless", 4},\n)\n'})}),"\n",(0,i.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/component.h> // or\n#include <sst/core/subcomponent.h>\n"})})]})}function m(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);