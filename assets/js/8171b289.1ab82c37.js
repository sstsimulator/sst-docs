"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[51907],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(96540);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}},77629:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"core/timeconverter/class","title":"SST::TimeConverter","description":"Shared TimeConverters returned by SST-Core APIs will be removed in SST 16.0. All functions accepting TimeConverter now accept TimeConverter instead. Elements using a TimeConverter returned by SST-Core should create a local non-shared instance as shown:","source":"@site/../docs/core/timeconverter/class.md","sourceDirName":"core/timeconverter","slug":"/core/timeconverter/class","permalink":"/sst-docs/docs/core/timeconverter/class","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/timeconverter/class.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1747692370000,"frontMatter":{"title":"SST::TimeConverter"},"sidebar":"core","previous":{"title":"unlock","permalink":"/sst-docs/docs/core/statoutput/unlock"},"next":{"title":"convertFromCoreTime","permalink":"/sst-docs/docs/core/timeconverter/convertFromCoreTime"}}');var o=n(74848),s=n(28453);const i={title:"SST::TimeConverter"},c=void 0,a={},l=[];function d(e){const t={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.admonition,{title:"Deprecation",type:"warning",children:[(0,o.jsx)(t.p,{children:"Shared TimeConverters returned by SST-Core APIs will be removed in SST 16.0. All functions accepting TimeConverter* now accept TimeConverter instead. Elements using a TimeConverter* returned by SST-Core should create a local non-shared instance as shown:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"// Old code\nTimeConverter* tc = function_that_returns_tc();\n// New code\nTimeConverter tc = function_that_returns_tc();\n"})}),(0,o.jsxs)(t.p,{children:["Functions that return a ",(0,o.jsx)(t.code,{children:"TimeConverter*"})," will instead return a ",(0,o.jsx)(t.code,{children:"TimeConverter"})," in SST 16.0."]})]}),"\n",(0,o.jsxs)(t.p,{children:["A TimeConverter is an object used to manage the conversion of time between global time and various local (Component/SubComponent) views of time. See ",(0,o.jsx)(t.a,{href:"../../guides/concepts/time",children:"Time in SST"})," for a more detailed discussion of how SST handles time."]}),"\n",(0,o.jsx)(t.p,{children:"TimeConverters can be created by calling certain (Sub)Component functions. These are:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"../component/time/registerClock",children:"registerClock"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"../component/time/registerTimeBase",children:"registerTimeBase"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"../component/time/getDefaultTimeBase",children:"getDefaultTimeBase"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"../component/time/getTimeConverter",children:"getTimeConverter"})}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);