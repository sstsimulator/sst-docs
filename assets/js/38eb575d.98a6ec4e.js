"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[29776],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},65492:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"core/link/sendUntimedData","title":"sendUntimedData","description":"Send an event during SST\'s init() or complete() phase.","source":"@site/../docs/core/link/sendUntimedData.md","sourceDirName":"core/link","slug":"/core/link/sendUntimedData","permalink":"/sst-docs/docs/core/link/sendUntimedData","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/link/sendUntimedData.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1716583959000,"frontMatter":{"title":"sendUntimedData"},"sidebar":"core","previous":{"title":"setDefaultTimeBase","permalink":"/sst-docs/docs/core/link/setDefaultTimeBase"},"next":{"title":"recvUntimedData","permalink":"/sst-docs/docs/core/link/recvUntimedData"}}');var i=t(74848),a=t(28453);const r={title:"sendUntimedData"},c=void 0,l={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"void sendUntimedData(Event* data);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Send an event during SST's ",(0,i.jsx)(n.a,{href:"../component/lifecycle/init",children:(0,i.jsx)(n.code,{children:"init()"})})," or ",(0,i.jsx)(n.a,{href:"../component/lifecycle/complete",children:(0,i.jsx)(n.code,{children:"complete()"})})," phase."]}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"data"})," (Event*) Event to send"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/simpleElementExample/basicSimLifeCycle.cc"',children:"void basicSimLifeCycle::init(unsigned int phase) {\n\n    // Only send our info on phase 0\n    if (phase == 0) {\n        basicLifeCycleEvent* event = new basicLifeCycleEvent(getName(), eventsToSend);\n        //highlight-next-line\n        leftLink->sendUntimedData(event);\n    }\n\n    /** Rest of init() handling **/\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/link.h>\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);