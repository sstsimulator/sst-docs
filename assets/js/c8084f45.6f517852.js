"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[30401],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var n=s(96540);const a={},r=n.createContext(a);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:t},e.children)}},78229:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"config/stats/object/addParam","title":"addParam","description":"\x3c!---","source":"@site/../docs/config/stats/object/addParam.md","sourceDirName":"config/stats/object","slug":"/config/stats/object/addParam","permalink":"/sst-docs/docs/config/stats/object/addParam","draft":false,"unlisted":false,"editUrl":"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/config/stats/object/addParam.md","tags":[],"version":"current","lastUpdatedBy":"grvosku","lastUpdatedAt":1684522150000,"frontMatter":{"title":"addParam"},"sidebar":"config","previous":{"title":"Statistics Objects","permalink":"/sst-docs/docs/config/stats/object/statisticObject"},"next":{"title":"addParams","permalink":"/sst-docs/docs/config/stats/object/addParams"}}');var a=s(74848),r=s(28453);const o={title:"addParam"},c=void 0,i={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Import",id:"import",level:2}];function l(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Adds a parameter to a statistic object's parameter set."}),"\n",(0,a.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"statisticObject.addParam(key, value)\n"})}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"key"})," (type: string) name of the parameter"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"value"})," (type: varies) value of the parameter. This can be almost any Python object and the ",(0,a.jsx)(t.code,{children:"__str__"})," method will be called to get a string representation. A list can be passed to this call when the ",(0,a.jsx)(t.code,{children:"find_array"})," function is used in the class to retrieve the parameters."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import sst\n\ncomponent0 = sst.Component("c0", "simpleElementExample.example1")\nstat = component0.setStatistic("EventSizeReceived")\n\nstat.addParam("rate", "50ns")\n'})}),"\n",(0,a.jsx)(t.h2,{id:"import",children:"Import"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"import sst\n"})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);